{"ast":null,"code":"// import { useEffect, useState } from 'react';\n\n// const initialFoods = [\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-waffle-thumbnail.jpg',\n//       mobile: './assets/images/image-waffle-mobile.jpg',\n//       tablet: './assets/images/image-waffle-tablet.jpg',\n//       desktop: './assets/images/image-waffle-desktop.jpg',\n//     },\n//     name: 'Waffle with Berries',\n//     category: 'Waffle',\n//     price: 6.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-creme-brulee-thumbnail.jpg',\n//       mobile: './assets/images/image-creme-brulee-mobile.jpg',\n//       tablet: './assets/images/image-creme-brulee-tablet.jpg',\n//       desktop: './assets/images/image-creme-brulee-desktop.jpg',\n//     },\n//     name: 'Vanilla Bean Crème Brûlée',\n//     category: 'Crème Brûlée',\n//     price: 7.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-macaron-thumbnail.jpg',\n//       mobile: './assets/images/image-macaron-mobile.jpg',\n//       tablet: './assets/images/image-macaron-tablet.jpg',\n//       desktop: './assets/images/image-macaron-desktop.jpg',\n//     },\n//     name: 'Macaron Mix of Five',\n//     category: 'Macaron',\n//     price: 8.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-tiramisu-thumbnail.jpg',\n//       mobile: './assets/images/image-tiramisu-mobile.jpg',\n//       tablet: './assets/images/image-tiramisu-tablet.jpg',\n//       desktop: './assets/images/image-tiramisu-desktop.jpg',\n//     },\n//     name: 'Classic Tiramisu',\n//     category: 'Tiramisu',\n//     price: 5.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-baklava-thumbnail.jpg',\n//       mobile: './assets/images/image-baklava-mobile.jpg',\n//       tablet: './assets/images/image-baklava-tablet.jpg',\n//       desktop: './assets/images/image-baklava-desktop.jpg',\n//     },\n//     name: 'Pistachio Baklava',\n//     category: 'Baklava',\n//     price: 4.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-meringue-thumbnail.jpg',\n//       mobile: './assets/images/image-meringue-mobile.jpg',\n//       tablet: './assets/images/image-meringue-tablet.jpg',\n//       desktop: './assets/images/image-meringue-desktop.jpg',\n//     },\n//     name: 'Lemon Meringue Pie',\n//     category: 'Pie',\n//     price: 5.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-cake-thumbnail.jpg',\n//       mobile: './assets/images/image-cake-mobile.jpg',\n//       tablet: './assets/images/image-cake-tablet.jpg',\n//       desktop: './assets/images/image-cake-desktop.jpg',\n//     },\n//     name: 'Red Velvet Cake',\n//     category: 'Cake',\n//     price: 4.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-brownie-thumbnail.jpg',\n//       mobile: './assets/images/image-brownie-mobile.jpg',\n//       tablet: './assets/images/image-brownie-tablet.jpg',\n//       desktop: './assets/images/image-brownie-desktop.jpg',\n//     },\n//     name: 'Salted Caramel Brownie',\n//     category: 'Brownie',\n//     price: 4.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-panna-cotta-thumbnail.jpg',\n//       mobile: './assets/images/image-panna-cotta-mobile.jpg',\n//       tablet: './assets/images/image-panna-cotta-tablet.jpg',\n//       desktop: './assets/images/image-panna-cotta-desktop.jpg',\n//     },\n//     name: 'Vanilla Panna Cotta',\n//     category: 'Panna Cotta',\n//     price: 6.5,\n//     quantity: 0,\n//   },\n// ];\n\n// export default function App() {\n//   const [items, setItems] = useState(initialFoods);\n//   const [cart, setCart] = useState([]);\n\n//   // function onSetCart(item) {\n//   //   setCart(prevCart => ({\n//   //     ...prevCart,\n//   //     quantity: item.quantity,\n//   //     item: item.name,\n//   //   }));\n//   // }\n//   function onSetCart(item) {\n//     setCart(prevCart => {\n//       const itemInCart = prevCart.find(cartItem => cartItem.name === item.name);\n//       if (itemInCart) {\n//         // If the item already exists in the cart, update its quantity\n//         return prevCart.map(cartItem =>\n//           cartItem.name === item.name\n//             ? {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity + 1,\n//                 itemTotal: cartItem.price * (cartItem.quantity + 1),\n//               }\n//             : cartItem\n//         );\n//       } else {\n//         // If the item does not exist, add it to the cart\n//         return [\n//           ...prevCart,\n//           {\n//             ...item,\n//             quantity: 1,\n//             itemTotal: item.price,\n//           },\n//         ];\n//       }\n//     });\n//   }\n\n//   function onDeleteCart(item) {\n//     setCart(prevCart => {\n//       const itemInCart = prevCart.find(cartItem => cartItem.name === item.name);\n//       if (itemInCart) {\n//         return prevCart.map(cartItem =>\n//           cartItem.name === item.name\n//             ? {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity > 1 ? cartItem.quantity - 1 : 1,\n//                 itemTotal:\n//                   cartItem.price *\n//                   (cartItem.quantity > 1\n//                     ? cartItem.quantity - 1\n//                     : setCart(prevCart =>\n//                         prevCart.filter(itemd => itemd.name !== item.name)\n//                       )),\n//               }\n//             : cartItem\n//         );\n//       }\n//     });\n//   }\n\n//   useEffect(\n//     function () {\n//       // console.log(items);\n//       console.log(cart);\n//     },\n//     [cart]\n//   );\n//   return (\n//     <div className=\" bg-red-50 flex flex-col align-middle px-10 min-h-screen \">\n//       <Header />\n//       <FoodList\n//         items={items}\n//         setItems={setItems}\n//         onSetCart={onSetCart}\n//         onDeleteCart={onDeleteCart}\n//       />\n//       <Cart cart={cart} />\n//     </div>\n//   );\n// }\n\n// function Header() {\n//   return (\n//     <h1 className=\"text-4xl font-extrabold my-6 text-red-800 \">Desserts</h1>\n//   );\n// }\n\n// function FoodList({\n//   onHandleOrderNum,\n//   items,\n//   setItems,\n//   onSetCart,\n//   onDeleteCart,\n// }) {\n//   return (\n//     <div>\n//       {items.map(food => (\n//         <Food\n//           foodObj={food}\n//           key={food.name}\n//           onHandleOrderNum={onHandleOrderNum}\n//           items={items}\n//           setItems={setItems}\n//           onSetCart={onSetCart}\n//           onDeleteCart={onDeleteCart}\n//         />\n//       ))}\n//     </div>\n//   );\n// }\n\n// function Food({\n//   foodObj,\n//   onHandleOrderNum,\n//   items,\n//   setItems,\n//   onSetCart,\n//   onDeleteCart,\n// }) {\n//   return (\n//     <>\n//       <li className=\"list-none relative\">\n//         <img\n//           src={foodObj.image.mobile}\n//           alt={foodObj.name}\n//           className=\"rounded-md\"\n//         ></img>\n//         <AddToCart\n//           foodObj={foodObj}\n//           onHandleOrderNum={onHandleOrderNum}\n//           key={foodObj.name}\n//           items={items}\n//           setItems={setItems}\n//           onSetCart={onSetCart}\n//           onDeleteCart={onDeleteCart}\n//         />\n//       </li>\n//       <FoodInfo foodObj={foodObj} />\n//     </>\n//   );\n// }\n\n// function FoodInfo({ foodObj }) {\n//   return (\n//     <div className=\"py-4\">\n//       <p className=\"opacity-40  text-red-400\">{foodObj.category}</p>\n//       <p>{foodObj.name}</p>\n//       <p className=\"text-red-700 text-md font-bold\">\n//         ${foodObj.price.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// }\n// function AddToCart({ foodObj, items, setItems, onSetCart, onDeleteCart }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [quantity, setQuantity] = useState(0);\n\n//   function handleOrderNum(e) {\n//     setIsOpen(true);\n//   }\n\n//   // function handleIncrement() {\n//   //   setNumPlate(num => num + 1);\n//   // }\n//   function handleIncrementOrder(foodObj) {\n//     setItems(items =>\n//       items.map(food =>\n//         foodObj.name === food.name\n//           ? { ...food, quantity: food.quantity + 1 }\n//           : food\n//       )\n//     );\n//     setQuantity(prevQuantity => prevQuantity + 1);\n//     onSetCart(foodObj);\n//   }\n\n//   function handleDecrementOrder(foodObj) {\n//     setItems(items =>\n//       items.map(food =>\n//         foodObj.name === food.name\n//           ? { ...food, prodquantity: food.quantity - 1 }\n//           : food\n//       )\n//     );\n//     setQuantity(prevQuantity => {\n//       if (prevQuantity >= 1) {\n//         setIsOpen(false); // Close the cart when quantity reaches zero\n//         return 1; // Ensure the quantity doesn't go below 1\n//       }\n//       return prevQuantity - 1;\n//     });\n//     onDeleteCart(foodObj);\n//   }\n//   useEffect(\n//     function () {\n//       // console.log(items);\n//       console.log(items);\n//     },\n//     [items]\n//   );\n\n//   return (\n//     <button className=\"  absolute -bottom-4 left-20\" onClick={handleOrderNum}>\n//       {!isOpen && (\n//         <div className=\"bg-white border-red-200 border-2 rounded-full flex px-4 py-1\">\n//           <span>\n//             <img\n//               src=\"./assets/images/icon-add-to-cart.svg\"\n//               alt=\"Cart-img\"\n//             ></img>\n//           </span>\n//           <span> Add to Cart</span>\n//         </div>\n//       )}\n\n//       {isOpen && (\n//         <div className=\"bg-red-600 rounded-full flex gap-6  px-4 py-2 \">\n//           <img\n//             src=\"./assets/images/icon-decrement-quantity.svg\"\n//             alt=\"decrement\"\n//             className=\"rounded-full border-2  p-2 border-white\"\n//             onClick={() => handleDecrementOrder(foodObj)}\n//           ></img>\n//           <span className=\"text-white\"> {quantity}</span>\n//           <img\n//             src=\"./assets/images/icon-increment-quantity.svg\"\n//             alt=\"increment\"\n//             className=\"rounded-full border-2 p-2 border-white\"\n//             onClick={() => handleIncrementOrder(foodObj)}\n//           ></img>\n//         </div>\n//       )}\n//     </button>\n//   );\n// }\n\n// function Cart({ cart }) {\n//   return (\n//     <div className=\"bg-white rounded-md pb-8 mb-8 \">\n//       {!cart.length > 0 ? (\n//         <div>\n//           <h2 className=\"text-red-700 text-3xl mt-4 ml-4 font-bold\">\n//             Your Cart(0)\n//           </h2>\n//           <img\n//             src=\"./assets/images/illustration-empty-cart.svg\"\n//             alt=\"empty-cart\"\n//             className=\"mx-auto\"\n//           ></img>\n//           <p className=\"text-sm text-customBrown mx-8 opacity-60 font-bold\">\n//             Your added items will appear here\n//           </p>\n//         </div>\n//       ) : (\n//         <ul>\n//           {cart.map(item => (\n//             <li>\n//               <p>{item.name}</p>\n//               <div className=\"flex gap-2 \">\n//                 <p>{item.quantity}x</p>\n//                 <p>@${item.price}</p>\n//                 <p>${item.itemTotal.toFixed(2)}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// // function CartItem({ cart }) {\n// //   return (\n// //     <div>\n// //       <li></li>\n// //     </div>\n// //   );\n// // }","map":{"version":3,"names":[],"sources":["C:/Users/hp/Desktop/foodlist/src/App.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\n// const initialFoods = [\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-waffle-thumbnail.jpg',\n//       mobile: './assets/images/image-waffle-mobile.jpg',\n//       tablet: './assets/images/image-waffle-tablet.jpg',\n//       desktop: './assets/images/image-waffle-desktop.jpg',\n//     },\n//     name: 'Waffle with Berries',\n//     category: 'Waffle',\n//     price: 6.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-creme-brulee-thumbnail.jpg',\n//       mobile: './assets/images/image-creme-brulee-mobile.jpg',\n//       tablet: './assets/images/image-creme-brulee-tablet.jpg',\n//       desktop: './assets/images/image-creme-brulee-desktop.jpg',\n//     },\n//     name: 'Vanilla Bean Crème Brûlée',\n//     category: 'Crème Brûlée',\n//     price: 7.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-macaron-thumbnail.jpg',\n//       mobile: './assets/images/image-macaron-mobile.jpg',\n//       tablet: './assets/images/image-macaron-tablet.jpg',\n//       desktop: './assets/images/image-macaron-desktop.jpg',\n//     },\n//     name: 'Macaron Mix of Five',\n//     category: 'Macaron',\n//     price: 8.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-tiramisu-thumbnail.jpg',\n//       mobile: './assets/images/image-tiramisu-mobile.jpg',\n//       tablet: './assets/images/image-tiramisu-tablet.jpg',\n//       desktop: './assets/images/image-tiramisu-desktop.jpg',\n//     },\n//     name: 'Classic Tiramisu',\n//     category: 'Tiramisu',\n//     price: 5.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-baklava-thumbnail.jpg',\n//       mobile: './assets/images/image-baklava-mobile.jpg',\n//       tablet: './assets/images/image-baklava-tablet.jpg',\n//       desktop: './assets/images/image-baklava-desktop.jpg',\n//     },\n//     name: 'Pistachio Baklava',\n//     category: 'Baklava',\n//     price: 4.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-meringue-thumbnail.jpg',\n//       mobile: './assets/images/image-meringue-mobile.jpg',\n//       tablet: './assets/images/image-meringue-tablet.jpg',\n//       desktop: './assets/images/image-meringue-desktop.jpg',\n//     },\n//     name: 'Lemon Meringue Pie',\n//     category: 'Pie',\n//     price: 5.0,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-cake-thumbnail.jpg',\n//       mobile: './assets/images/image-cake-mobile.jpg',\n//       tablet: './assets/images/image-cake-tablet.jpg',\n//       desktop: './assets/images/image-cake-desktop.jpg',\n//     },\n//     name: 'Red Velvet Cake',\n//     category: 'Cake',\n//     price: 4.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-brownie-thumbnail.jpg',\n//       mobile: './assets/images/image-brownie-mobile.jpg',\n//       tablet: './assets/images/image-brownie-tablet.jpg',\n//       desktop: './assets/images/image-brownie-desktop.jpg',\n//     },\n//     name: 'Salted Caramel Brownie',\n//     category: 'Brownie',\n//     price: 4.5,\n//     quantity: 0,\n//   },\n//   {\n//     image: {\n//       thumbnail: './assets/images/image-panna-cotta-thumbnail.jpg',\n//       mobile: './assets/images/image-panna-cotta-mobile.jpg',\n//       tablet: './assets/images/image-panna-cotta-tablet.jpg',\n//       desktop: './assets/images/image-panna-cotta-desktop.jpg',\n//     },\n//     name: 'Vanilla Panna Cotta',\n//     category: 'Panna Cotta',\n//     price: 6.5,\n//     quantity: 0,\n//   },\n// ];\n\n// export default function App() {\n//   const [items, setItems] = useState(initialFoods);\n//   const [cart, setCart] = useState([]);\n\n//   // function onSetCart(item) {\n//   //   setCart(prevCart => ({\n//   //     ...prevCart,\n//   //     quantity: item.quantity,\n//   //     item: item.name,\n//   //   }));\n//   // }\n//   function onSetCart(item) {\n//     setCart(prevCart => {\n//       const itemInCart = prevCart.find(cartItem => cartItem.name === item.name);\n//       if (itemInCart) {\n//         // If the item already exists in the cart, update its quantity\n//         return prevCart.map(cartItem =>\n//           cartItem.name === item.name\n//             ? {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity + 1,\n//                 itemTotal: cartItem.price * (cartItem.quantity + 1),\n//               }\n//             : cartItem\n//         );\n//       } else {\n//         // If the item does not exist, add it to the cart\n//         return [\n//           ...prevCart,\n//           {\n//             ...item,\n//             quantity: 1,\n//             itemTotal: item.price,\n//           },\n//         ];\n//       }\n//     });\n//   }\n\n//   function onDeleteCart(item) {\n//     setCart(prevCart => {\n//       const itemInCart = prevCart.find(cartItem => cartItem.name === item.name);\n//       if (itemInCart) {\n//         return prevCart.map(cartItem =>\n//           cartItem.name === item.name\n//             ? {\n//                 ...cartItem,\n//                 quantity: cartItem.quantity > 1 ? cartItem.quantity - 1 : 1,\n//                 itemTotal:\n//                   cartItem.price *\n//                   (cartItem.quantity > 1\n//                     ? cartItem.quantity - 1\n//                     : setCart(prevCart =>\n//                         prevCart.filter(itemd => itemd.name !== item.name)\n//                       )),\n//               }\n//             : cartItem\n//         );\n//       }\n//     });\n//   }\n\n//   useEffect(\n//     function () {\n//       // console.log(items);\n//       console.log(cart);\n//     },\n//     [cart]\n//   );\n//   return (\n//     <div className=\" bg-red-50 flex flex-col align-middle px-10 min-h-screen \">\n//       <Header />\n//       <FoodList\n//         items={items}\n//         setItems={setItems}\n//         onSetCart={onSetCart}\n//         onDeleteCart={onDeleteCart}\n//       />\n//       <Cart cart={cart} />\n//     </div>\n//   );\n// }\n\n// function Header() {\n//   return (\n//     <h1 className=\"text-4xl font-extrabold my-6 text-red-800 \">Desserts</h1>\n//   );\n// }\n\n// function FoodList({\n//   onHandleOrderNum,\n//   items,\n//   setItems,\n//   onSetCart,\n//   onDeleteCart,\n// }) {\n//   return (\n//     <div>\n//       {items.map(food => (\n//         <Food\n//           foodObj={food}\n//           key={food.name}\n//           onHandleOrderNum={onHandleOrderNum}\n//           items={items}\n//           setItems={setItems}\n//           onSetCart={onSetCart}\n//           onDeleteCart={onDeleteCart}\n//         />\n//       ))}\n//     </div>\n//   );\n// }\n\n// function Food({\n//   foodObj,\n//   onHandleOrderNum,\n//   items,\n//   setItems,\n//   onSetCart,\n//   onDeleteCart,\n// }) {\n//   return (\n//     <>\n//       <li className=\"list-none relative\">\n//         <img\n//           src={foodObj.image.mobile}\n//           alt={foodObj.name}\n//           className=\"rounded-md\"\n//         ></img>\n//         <AddToCart\n//           foodObj={foodObj}\n//           onHandleOrderNum={onHandleOrderNum}\n//           key={foodObj.name}\n//           items={items}\n//           setItems={setItems}\n//           onSetCart={onSetCart}\n//           onDeleteCart={onDeleteCart}\n//         />\n//       </li>\n//       <FoodInfo foodObj={foodObj} />\n//     </>\n//   );\n// }\n\n// function FoodInfo({ foodObj }) {\n//   return (\n//     <div className=\"py-4\">\n//       <p className=\"opacity-40  text-red-400\">{foodObj.category}</p>\n//       <p>{foodObj.name}</p>\n//       <p className=\"text-red-700 text-md font-bold\">\n//         ${foodObj.price.toFixed(2)}\n//       </p>\n//     </div>\n//   );\n// }\n// function AddToCart({ foodObj, items, setItems, onSetCart, onDeleteCart }) {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [quantity, setQuantity] = useState(0);\n\n//   function handleOrderNum(e) {\n//     setIsOpen(true);\n//   }\n\n//   // function handleIncrement() {\n//   //   setNumPlate(num => num + 1);\n//   // }\n//   function handleIncrementOrder(foodObj) {\n//     setItems(items =>\n//       items.map(food =>\n//         foodObj.name === food.name\n//           ? { ...food, quantity: food.quantity + 1 }\n//           : food\n//       )\n//     );\n//     setQuantity(prevQuantity => prevQuantity + 1);\n//     onSetCart(foodObj);\n//   }\n\n//   function handleDecrementOrder(foodObj) {\n//     setItems(items =>\n//       items.map(food =>\n//         foodObj.name === food.name\n//           ? { ...food, prodquantity: food.quantity - 1 }\n//           : food\n//       )\n//     );\n//     setQuantity(prevQuantity => {\n//       if (prevQuantity >= 1) {\n//         setIsOpen(false); // Close the cart when quantity reaches zero\n//         return 1; // Ensure the quantity doesn't go below 1\n//       }\n//       return prevQuantity - 1;\n//     });\n//     onDeleteCart(foodObj);\n//   }\n//   useEffect(\n//     function () {\n//       // console.log(items);\n//       console.log(items);\n//     },\n//     [items]\n//   );\n\n//   return (\n//     <button className=\"  absolute -bottom-4 left-20\" onClick={handleOrderNum}>\n//       {!isOpen && (\n//         <div className=\"bg-white border-red-200 border-2 rounded-full flex px-4 py-1\">\n//           <span>\n//             <img\n//               src=\"./assets/images/icon-add-to-cart.svg\"\n//               alt=\"Cart-img\"\n//             ></img>\n//           </span>\n//           <span> Add to Cart</span>\n//         </div>\n//       )}\n\n//       {isOpen && (\n//         <div className=\"bg-red-600 rounded-full flex gap-6  px-4 py-2 \">\n//           <img\n//             src=\"./assets/images/icon-decrement-quantity.svg\"\n//             alt=\"decrement\"\n//             className=\"rounded-full border-2  p-2 border-white\"\n//             onClick={() => handleDecrementOrder(foodObj)}\n//           ></img>\n//           <span className=\"text-white\"> {quantity}</span>\n//           <img\n//             src=\"./assets/images/icon-increment-quantity.svg\"\n//             alt=\"increment\"\n//             className=\"rounded-full border-2 p-2 border-white\"\n//             onClick={() => handleIncrementOrder(foodObj)}\n//           ></img>\n//         </div>\n//       )}\n//     </button>\n//   );\n// }\n\n// function Cart({ cart }) {\n//   return (\n//     <div className=\"bg-white rounded-md pb-8 mb-8 \">\n//       {!cart.length > 0 ? (\n//         <div>\n//           <h2 className=\"text-red-700 text-3xl mt-4 ml-4 font-bold\">\n//             Your Cart(0)\n//           </h2>\n//           <img\n//             src=\"./assets/images/illustration-empty-cart.svg\"\n//             alt=\"empty-cart\"\n//             className=\"mx-auto\"\n//           ></img>\n//           <p className=\"text-sm text-customBrown mx-8 opacity-60 font-bold\">\n//             Your added items will appear here\n//           </p>\n//         </div>\n//       ) : (\n//         <ul>\n//           {cart.map(item => (\n//             <li>\n//               <p>{item.name}</p>\n//               <div className=\"flex gap-2 \">\n//                 <p>{item.quantity}x</p>\n//                 <p>@${item.price}</p>\n//                 <p>${item.itemTotal.toFixed(2)}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n// }\n\n// // function CartItem({ cart }) {\n// //   return (\n// //     <div>\n// //       <li></li>\n// //     </div>\n// //   );\n// // }\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}